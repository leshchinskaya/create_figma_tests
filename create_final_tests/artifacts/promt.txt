Пожалуйста, на основании следующих артефактов:

### 1. Бизнес-требования (req\_showcase):

Описание логики с точными названиями фич, секций и экранов из Figma.
Содержимое файла `req_showcase.md`:

```markdown
{{REQ_SHOWCASE_CONTENT}}
```

### 2. Swagger-спецификация (swagger):

Описание API, моделей и параметров запросов.
Содержимое файла `swagger.yaml`:

```yaml
{{SWAGGER_CONTENT}}
```

### 3. Тесты на дизайн (tests\_from\_figma):

Краткие сценарии с Summary, содержащие названия секций/экранов из Figma.
Содержимое файла `tests_from_figma.csv`:

```csv
{{TESTS_FROM_FIGMA_CONTENT}}
```

Правила:

* Обязательно сохрани наименования файлов, которые прикреплены к тестам
* Обязательно сохрани ссылки на figma, которые прикрпелены к тестам

Сгенерируй единый CSV (UTF-8, разделитель ‘;’) со следующими колонками:
TestCaseIdentifier;Summary;Description;Priority;Labels;ManualTestSteps;Board;testRepositoryPath;testCaseType

Общие правила:

* Ровно 9 колонок на каждую строку.
* Summary ≤100 символов, императивно.
* Description: контекст, ID требований, часть требований, которые покрываются данной проверкой, ссылка на Figma, наименование файла из tests\_from\_figma
* Priority: Blocker|Critical|Normal|Minor.
* Labels: (Functional, Regression, Performance, StatePath, Boundary, DecisionTable, ErrorGuessing и т.д.).
* ManualTestSteps: строка JSON‑массива шагов, где каждый элемент содержит поля Action, Data, Expected Result. Пример:

```json
[{"id":397766,"index":1,"fields":{"Action":"Navigate to the application's login page.","Data":"URL: https://example.com/login","Expected Result":"The login page with username and password fields, and a 'Login' button, is displayed."}}]
```
заключается в двойные кавычки: "[{""id"":…}]"
Пример: "[{""id"":1,""index"":1,""fields"":{""Action"":""Авторизоваться. На главном экране тапнуть по аватару в section_header."",""Data"":"""",""Expected Result"":""Происходит действие `Открыть хедер` (например, переход на экран профиля или открытие деталей хедера).""}}]"

* Board: QA.
* testRepositoryPath: "название фичи" (с маленькой буквы)
* testCaseType: component

1. Отправка запроса:

   * Позитивные проверки (корректный запрос - успешный ответ - отображение данных согласно TЗ). Добавляй наименование запроса и моделей из Swagger 
   * Ошибка/таймаут/offline в одном сценарии (негативные проверки + отсутствие сети). Добавляй наименование запроса и моделей из Swagger
   * Примеры названий:

     * Фича. Экран/шторка/TUP - запрос
     * Фича – запрос (для одноэкранных фич)

2. Пагинация:

   * Два сценария: успешная догрузка и ошибка/offline. Добавляй наименование запроса и моделей из Swagger
   * Названия:

     * Фича. Название экрана – пагинированный запрос
     * Фича. Название экрана – пагинированный запрос, ошибка

3. PTR:

   * Два сценария: PTR и PTR, ошибка. Добавляй наименование запроса и моделей из Swagger
   * Названия аналогично пагинации.

4. SPEC Кэш:

   * Несколько сценариев: с кэшем, без кэша, с кэшем ошибка, без кэша ошибка.
   * Названия:

     * Фича. Экран – запрос, с/без кэша
     * Фича. Экран – запрос, с/без кэша, ошибка

5. Логика стеков экранов:

   * Сохранение/очистка данных при переходе/возврате.
   * Сворачивание приложения - сохранение состояния.
   * Название:

     * Фича – логика работы в стеке экранов

6. Компоновка:

   * Проверка layout в состояниях: заполненное, Empty State, Error State, No Connection.
   * Отдельно для каждого экрана/шторки/TUP.
   * Названия:

     * Фича. Экран – компоновка
     * Фича. Экран. Error State – компоновка
     * Фича. Экран. Empty State – компоновка
     * Фича. Экран. No Connection – компоновка

7. Элемент (поле, чек-бокс, радиобаттон, карусель и т.п.). Используй техники тест-дизайна:
   a) Позитивные проверки + логика работы:

   * Фича. Элемент – позитивные проверки
   * Фича. Экран/шторка. Элемент – позитивные
     b) Логика работы (например, маска, валидация, автоскролл):
   * Фича. Элемент – логика работы
     c) Негативные проверки:
   * Фича. Элемент – негативные проверки
   * Фича. Экран/шторка. Элемент – негативные

Дополнительно:

* Для каждого бизнес-требования ≥1 позитивный и ≥1 негативный тест.
* Точки входа фич покрываются переходами в других фичах, не дублируй.
* Не тестировать “логика работы” поля отдельно, если она уже покрыта позитивным тестом.
* Без “инициализации” и “действия с ошибкой” в названиях — используй конкретные названия операций (напр. “запрос на верификацию”, “вход по номеру телефона”).