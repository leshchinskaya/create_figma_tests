openapi: 3.1.0
info:
  title: Home Page API
  version: 1.0.1
tags:
  - name: Главный экран
    description: API для получения данных для главного экрана
  - name: Товары
    description: API для операций с товарами
  - name: Корзина
    description: API для операций с корзиной
paths:
  /user/profile:
    get:
      summary: Получить профиль пользователя
      tags:
        - Главный экран
      responses:
        '200':
          description: Информация о профиле
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /user/bonuses:
    get:
      summary: Получить информацию о бонусах
      tags:
        - Главный экран
      responses:
        '200':
          description: Данные о бонусах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bonuses'

  /recommendations/symptoms:
    get:
      summary: Получить тэги по симптомам
      tags:
        - Главный экран
      responses:
        '200':
          description: Список тэгов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SymptomTag'

  /banners:
    get:
      summary: Получить баннеры главной страницы
      tags:
        - Главный экран
      responses:
        '200':
          description: Список баннеров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'

  /recommendations/categories:
    get:
      summary: Получить блоки с рекомендациями по категориям
      tags:
        - Главный экран
      parameters:
        - in: query
          name: categoryId
          schema: { type: string }
          required: false
        - in: query
          name: offset
          schema: { type: integer, minimum: 0 }
          required: false
        - in: query
          name: limit
          schema: { type: integer, default: 10 }
          required: false
      responses:
        '200':
          description: Массив блоков витрин и данных по категориям
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /products/{productId}/favorite:
    put:
      summary: Поставить лайк (добавить в избранное)
      tags: [Товары]
      parameters:
        - name: productId
          in: path
          required: true
          schema: 
            type: string
      responses:
        '204':
          description: Лайк поставлен

    delete:
      summary: Убрать лайк (удалить из избранного)
      tags: [Товары]
      parameters:
        - name: productId
          in: path
          required: true
          schema: 
            type: string
      responses:
        '204':
          description: Лайк удалён
  
  /cart/items:
    post:
      summary: Добавить товар в корзину
      tags: [Корзина]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [productId, quantity]
              properties:
                productId: { type: string }
                quantity: { type: integer, minimum: 1 }
      responses:
        '204':
          description: Товар добавлен в корзину

  /cart/items/{productId}:
    patch:
      summary: Изменить количество товара в корзине
      description: >
        Увеличивает или уменьшает количество конкретного товара в корзине.
        Если итоговое количество становится 0 или меньше — товар удаляется.
      tags: [Корзина]
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  description: Количество, на которое изменить (может быть отрицательным)
              required: [quantity]
      responses:
        '204':
          description: Количество товара обновлено или товар удалён
        '400':
          description: Некорректное значение количества
        '404':
          description: Товар не найден в корзине

components:
  schemas:
    UserProfile:
      type: object
      properties:
        id: { type: string }
        avatarUrl: { type: string }
        deliveryAddress:
          type: object
          properties:
            street: { type: string }
            house: { type: string }
        hasUnreadNotifications: { type: boolean }

    Bonuses:
      type: object
      properties:
        total: { type: integer }
        expiring: { type: integer }
        expiresAt: { type: string, format: date }

    SymptomTag:
      type: object
      properties:
        id: { type: string }
        label: { type: string }
        emoji: { type: string }

    Banner:
      type: object
      properties:
        id: { type: string }
        imageUrl: { type: string }
        targetUrl: { type: string }

    Category:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        description: { type: string }
        icon: { type: string }
        purchasedProducts: { type: array, items: { $ref: '#/components/schemas/Product' } }
        banners: { type: array, items: { $ref: '#/components/schemas/Banner' } }
        analogProducts: { type: array, items: { $ref: '#/components/schemas/Product' } }
        blogPost: { $ref: '#/components/schemas/BlogArticle' }
        watchedProducts: { type: array, items: { $ref: '#/components/schemas/Product' } }
        discountProducts: { $ref: '#/components/schemas/ProductSectionWithPagination' }

    ProductList:
      type: object
      properties:
        products:
          type: array
          items: { $ref: '#/components/schemas/Product' }

    Product:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        oldPrice: { type: string }
        price: { type: string }
        imageUrl: { type: string }
        rating: { type: number }
        reviewsCount: { type: number }
        discountPercent: { type: number }
        isFavorite: { type: boolean }

    ProductSectionWithPagination:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        pagination:
          type: object
          properties:
            offset: { type: integer }
            limit: { type: integer }
            total: { type: integer }
    
    BlogArticle:
      type: object
      properties:
        id: { type: string }
        topic: { type: string }
        title: { type: string }
        subtitle: { type: string }
        previewImageUrl: { type: string }